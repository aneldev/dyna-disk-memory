{"version":3,"sources":["webpack://dyna-disk-memory/webpack/universalModuleDefinition","webpack://dyna-disk-memory/webpack/bootstrap","webpack://dyna-disk-memory/./src/DynaDiskMemoryForNode.ts","webpack://dyna-disk-memory/./src/index.ts","webpack://dyna-disk-memory/external \"dyna-job-queue\"","webpack://dyna-disk-memory/external \"dyna-node-fs\"","webpack://dyna-disk-memory/external \"fs\"","webpack://dyna-disk-memory/external \"md5\"","webpack://dyna-disk-memory/external \"path\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"), require(\"path\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dyna-disk-memory\", [\"fs\", \"path\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dyna-disk-memory\"] = factory(require(\"fs\"), require(\"path\"));\n\telse\n\t\troot[\"dyna-disk-memory\"] = factory(root[\"fs\"], root[\"path\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_fs__, __WEBPACK_EXTERNAL_MODULE_path__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","const fs = require('fs');\nconst path = require('path');\n\nimport {DynaJobQueue}                     from \"dyna-job-queue\";\nimport {deleteFile, isFolderEmpty, rmdir} from \"dyna-node-fs\";\nimport * as md5                           from 'md5';\n\nimport {IDynaDiskMemoryConfig, IDynaDiskMemory} from './interfaces';\n\ninterface IFolderFile {\n  full: string;\n  folder: string;\n  file: string;\n  containerBase: string;\n}\n\nexport class DynaDiskMemory implements IDynaDiskMemory {\n  constructor(settings: IDynaDiskMemoryConfig) {\n    this._settings = {\n      fragmentSize: 13,\n      ...settings\n    };\n\n    if (settings.diskPath[settings.diskPath.length - 1] !== '/') this._settings.diskPath += '/';\n    if (this._test_performDiskDelay) console.warn('DynaDiskMemory is working with _test_performDiskDelay not zero, this means will perform intentional delays, this should be not set like this on production');\n  }\n\n  private _settings: IDynaDiskMemoryConfig;\n  private _jogQueue = new DynaJobQueue();\n  public _test_performDiskDelay: number = 0;\n\n  public set<TData>(container: string, key: string, data: TData): Promise<void> {\n    return this._jogQueue.addJobPromise((resolve: Function, reject: (error: any) => void) => {\n      this._saveFile(container, key, data)\n        .then(() => resolve())\n        .catch(reject);\n    });\n  }\n\n  public get<TData>(container: string, key: string): Promise<TData> {\n    return this._jogQueue.addJobPromise((resolve: (data:TData)=>void, reject: (error: any) => void) => {\n      this._loadFile(container, key)\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n\n  public del(container: string, key: string): Promise<void> {\n    return this._jogQueue.addJobPromise((resolve: Function, reject: (error: any) => void) => {\n      const fileInfo: IFolderFile = this._generateFilename(container, key);\n\n      deleteFile(fileInfo.full)\n        .then(()=>this._deleteEmptyFolderPath(fileInfo))\n        .then(()=>resolve())\n        .catch(reject);\n      });\n  }\n\n  private _deleteEmptyFolderPath(fileInfo: IFolderFile): Promise<void> {\n    return new Promise<void>((resolve: Function, reject: (error: any) => void) => {\n      let foldersToDel: string[] = [];\n      let folder: string = fileInfo.folder;\n\n      while (folder.length && folder !== this._settings.diskPath.slice(0, -1)) {\n        foldersToDel.push(folder);\n        folder = folder.substr(0, folder.lastIndexOf('/'));\n      }\n\n      let folderToDel: string = foldersToDel.shift();\n      const run = () => {\n        if (folderToDel) {\n          this._deleteEmptyFolder(folderToDel)\n            .then(() => {\n              folderToDel = foldersToDel.shift();\n              if (folderToDel) run(); else resolve();\n            })\n            .catch(reject);\n        }\n        else{\n          resolve(); // no folder\n        }\n      };\n\n      run(); // start\n    });\n  }\n\n  private _deleteEmptyFolder(folder: string): Promise<void> {\n    return isFolderEmpty(folder)\n      .then((isEmpty: boolean) => {\n        if (!isEmpty) return;\n        return rmdir(folder);\n      });\n  }\n\n  public delContainer(container: string): Promise<void> {\n    return this._jogQueue.addJobPromise((resolve: Function, reject: (error: any) => void) => {\n      const folder = this._generateFilename(container).folder;\n      rmdir(folder).then(()=>resolve()).catch(reject);\n    });\n  }\n\n  public delAll(): Promise<void> {\n    return this._jogQueue.addJobPromise((resolve: Function, reject: (error: any) => void) => {\n      rmdir(this._settings.diskPath).then(()=>resolve()).catch(reject);\n    });\n  }\n\n  private _saveFile(container: string, key: string, data: any): Promise<void> {\n    return new Promise((resolve: Function, reject: (error: any) => void) => {\n      let fileNames: IFolderFile = this._generateFilename(container, key);\n\n      this._createDirectory(fileNames.folder)\n        .then(() => {\n          this._writeFileOnDisk(fileNames.folder, fileNames.file, data)\n            .then(() => resolve())\n            .catch(reject);\n        })\n        .catch(reject);\n    });\n  }\n\n  private _loadFile(container: string, key: string): Promise<any> {\n    return new Promise((resolve: Function, reject: (error: any) => void) => {\n      let fileNames: IFolderFile = this._generateFilename(container, key);\n\n      this._readFileFromDisk(fileNames.folder, fileNames.file)\n        .then((data: any) => resolve(data))\n        .catch((error: any) => resolve(undefined));\n    });\n  }\n\n  private _createDirectory(directory: string): Promise<void> {\n    // todo: make this async\n    return new Promise((resolve: Function, reject: Function) => {\n      try {\n        const sep = '/'; //path.sep;\n        const initDir = path.isAbsolute(directory) ? sep : '';\n        directory.split(sep).reduce((parentDir, childDir) => {\n          const curDir = path.resolve(parentDir, childDir);\n          if (!fs.existsSync(curDir)) fs.mkdirSync(curDir);\n          return curDir;\n        }, initDir);\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  private _writeFileOnDisk(folder: string, fileName: string, data: any): Promise<void> {\n    return new Promise((resolve: Function, reject: (error: any) => void) => {\n      const fullPath: string = `${folder}/${fileName}`;\n      setTimeout(() => {\n        fs.exists(fullPath, (exists: boolean) => {\n          if (exists) fs.unlinkSync(fullPath);\n          fs.writeFile(`${fullPath}`, JSON.stringify(data), (err: any) => {\n            if (err)\n              reject({errorMessage: `Cannot write file [${fullPath}]`, error: err});\n            else\n              resolve();\n          });\n        });\n      }, this._test_performDiskDelay);\n    });\n  }\n\n  private _readFileFromDisk(folder: string, fileName: string): Promise<any> {\n    return new Promise((resolve: Function, reject: (error: any) => void) => {\n      setTimeout(() => {\n        const fullFileName: string = `${folder}/${fileName}`;\n        fs.exists(fullFileName, function (exists: boolean) {\n          if (exists) {\n            fs.readFile(fullFileName, 'utf8', (err: any, data: any) => {\n              if (err)\n                reject({code: 1802241812, errorMessage: `Cannot read file [${fullFileName}]`, error: err});\n              else\n                try {\n                  resolve(JSON.parse(data));\n                } catch (error) {\n                  reject({code: 1802241811, errorMessage: `Cannot parse file [${fullFileName}]`, error: err});\n                }\n            });\n          }\n          else {\n            reject({code: 1802241813, errorMessage: `DynaDiskMemory: _readFileFromDisk: cannot find to read file for folder [${folder}] and fileName [${fileName}]`, fullFileName});\n          }\n        });\n      }, this._test_performDiskDelay);\n    });\n  }\n\n  private _generateFilename(container: string, key: string = ''): IFolderFile {\n    const generatedContainer: string = this._getAsciiCodeHash(container);\n    const generatedKey: string = this._splitText(this._getAsciiCodeHash(key), this._settings.fragmentSize, '/');\n\n    const full: string = `${this._settings.diskPath}${generatedContainer}/${generatedKey}`;\n    const folder: string = full.substr(0, full.lastIndexOf('/'));\n    const file: string = full.substr(full.lastIndexOf('/') + 1);\n    let containerBase: string = `${generatedContainer}/${generatedKey}`;\n    containerBase = containerBase.substr(0, containerBase.lastIndexOf('/'));\n\n    return {full, folder, file, containerBase};\n  }\n\n  private _getAsciiCodeHash(key: string): string {\n    return md5(key);\n  }\n\n  private _splitText(text: string, step: number, separetor: string): string {\n    let output: string = \"\";\n    let se: string[] = text.split('').reverse();\n    while (se.length) output += se.splice(0, step).join('') + separetor;\n    if (output[output.length - 1] == separetor) output += '_fc';\n    return output;\n  }\n}\n\n","// Export the types\nexport {IDynaDiskMemoryConfig} from './interfaces';\nexport * from \"./DynaDiskMemoryForNode\";\n\n// ... but console error since this export is only for types\nconsole.error('dyna-disk-memory: you should import from \"dyna-disk-memory/web\" or \"dyna-disk-memory/node\"')","module.exports = require(\"dyna-job-queue\");","module.exports = require(\"dyna-node-fs\");","module.exports = __WEBPACK_EXTERNAL_MODULE_fs__;","module.exports = require(\"md5\");","module.exports = __WEBPACK_EXTERNAL_MODULE_path__;"],"sourceRoot":""}